---
title: "Chapter 4 - Geocentric Models"
format: html
---

```{r}
library(brms)
library(cmdstanr)
library(rethinking)
library(MASS)
library(tidyverse)

options(brms.backend = "cmdstanr")
```


## 4.1 Why normal distributions are normal


### 4.1.1 Normal by addition

```{r}
pos <- replicate(1000, sum(runif(16, -1, 1)))
```

```{r}
hist(pos)
```

```{r}
plot(density(pos))
```


### 4.1.2 Normal by multiplication

```{r}
prod(1 + runif(12, 0, 0.1))
```

```{r}
growth <- replicate(1000, prod(1 + runif(12, 0, 0.1)))
dens(growth, norm.comp = TRUE)
```

```{r}
big <- replicate(10000, prod(1 + runif(12, 0, 0.5)))
small <- replicate(10000, prod(1 + runif(12, 0, 0.1)))
```


### 4.1.3 Normal by log-multiplication

```{r}
log_big <- replicate(10000, log(prod(1 + runif(12, 0, 0.5))))
```


### 4.1.4 Using Gaussian distributions

## 4.2 A language for describing models

### 4.2.1 Redescribing the globe tossing model

```{r}
w <- 6
n <- 9

p_grid <- seq(from = 0, to = 1, length.out = 100)
prior <- dunif(p_grid, 0, 1)
posterior <- dbinom(w, n, p_grid) * prior
posterior <- posterior / sum(posterior)
```


## 4.3 Gaussian model of height

### 4.3.1 The data

```{r}
data(Howell1)
howell <- Howell1
```

```{r}
str(howell)
```

```{r}
precis(howell)
```

```{r}
howell$height
```

```{r}
howell_18_or_greater <- howell[howell$age >= 18, ]
```


### 4.3.2 The model

```{r}
curve(dnorm(x, mean = 178, sd = 20), from = 100, to = 250)
```

```{r}
curve(dunif(x, 0, 50), from = -10, to = 60)
```

```{r}
sample_mu <- rnorm(1e4, 178, 20)
sample_sigma <- runif(1e4, 0, 50)
prior_h <- rnorm(1e4, sample_mu, sample_sigma)
dens(prior_h)
```

```{r}
sample_mu <- rnorm(1e4, 178, 100)
prior_h <- rnorm(1e4, sample_mu, sample_sigma)
dens(prior_h)
```


### 4.3.3 Grid approximation of the posterior distribution

```{r}
mu_list <- seq(from = 150, to = 160, length.out = 100)
sigma_list <- seq(from = 7, to = 9, length.out = 100)

posterior <- expand.grid(mu = mu_list, sigma = sigma_list)
posterior$LL <- sapply(1:nrow(posterior), 
                      function(i) sum(
    dnorm(howell_18_or_greater$height, mean = posterior$mu[i], sd = posterior$sigma[i], log = TRUE)
))
posterior$prod <- posterior$LL + dnorm(posterior$mu, 178, 20, TRUE) + dunif(posterior$sigma, 0, 50, TRUE)

posterior$prob <- exp(posterior$prod - max(posterior$prod))
```

```{r}
contour_xyz(posterior$mu, posterior$sigma, posterior$prob)
```

```{r}
image_xyz(posterior$mu, posterior$sigma, posterior$prob)
```

```{r}
sample_rows <- sample(1:nrow(posterior), size = 1e4,
                      replace = TRUE, prob = posterior$prob)
```

```{r}
plot(sample_mu, sample_sigma, cex = 0.5, pch = 16,
     col = col.alpha(rangi2, 0.1))
```

```{r}
dens(sample_mu)
dens(sample_sigma)
```

```{r}
PI(sample_mu)
PI(sample_sigma)
```

```{r}
sample_heights <- sample(howell_18_or_greater$height, size = 20)
```

```{r}
mu_list <- seq(from = 150, to = 170, length.out = 200)
sigma_list <- seq(from = 4, to = 20, length.out = 200)

posterior_2 <- expand.grid(mu = mu_list, sigma = sigma_list)
posterior_2$LL <- sapply(1:nrow(posterior_2), 
                      function(i) sum(
    dnorm(sample_heights, mean = posterior_2$mu[i], sd = posterior_2$sigma[i], log = TRUE)
))
posterior_2$prod <- posterior_2$LL + dnorm(posterior_2$mu, 178, 20, TRUE) + dunif(posterior_2$sigma, 0, 50, TRUE)
sample_2_rows <- sample(1:nrow(posterior_2), size = 1e4,
                      replace = TRUE, prob = posterior_2$prob)
sample_2_mu <- posterior_2$mu[sample_2_rows]
sample_2_sigma <- posterior_2$sigma[sample_2_rows]
```

```{r}
plot(sample_2_mu, sample_2_sigma, cex = 0.5,
     col = col.alpha(rangi2, 0.1),
     xlab = "mu", ylab = "sigma", pch = 16)
```

```{r}
dens(sample_2_sigma, norm.comp = TRUE)
```


### 4.3.5 Finding the posterior distribution with `quap`

```{r}
flist <- alist(
    height ~ dnorm(mu, sigma),
    mu ~ dnorm(178, 20),
    sigma ~ dunif(0, 50)
)
```

```{r}
model_4.1 <- quap(flist, data = howell_18_or_greater)
```

```{r}
precis(model_4.1)
```

```{r}
start <- list(
    mu = mean(howell_18_or_greater$height),
    sigma = sd(howell_18_or_greater$height)
)

model_4.1 <- quap(flist, data = howell_18_or_greater,
                  start = start)
```

```{r}
model_4.2 <- quap(
    alist(
        height ~ dnorm(mu, sigma),
        mu ~ dnorm(178, 0.1),
        sigma ~ dunif(0, 50)
    ),
    data = howell_18_or_greater
)

precis(model_4.2)
```


### 4.3.6 Sampling from a `quap`

```{r}
vcov(model_4.1)
```

```{r}
diag(vcov(model_4.1))
cov2cor(vcov(model_4.1))
```

```{r}
posterior <- extract.samples(model_4.1, n = 1e4)
```

```{r}
head(posterior)
```

```{r}
precis(posterior)
```

```{r}
posterior <- mvrnorm(n = 1e4, mu = coef(model_4.1), Sigma = vcov(model_4.1))
```


## 4.4 Linear prediction

```{r}
plot(howell_18_or_greater$height ~ howell_18_or_greater$weight)
```


### 4.4.1 The linear model strategy

#### 4.4.1.1 Probability of the data

#### 4.4.1.2 Linear model 

#### 4.4.1.3 Priors

```{r}
set.seed(2971)
N <- 100
a <- rnorm(N, 178, 20)
b <- rnorm(N, 0, 10)
```

```{r}
plot(NULL, xlim = range(howell_18_or_greater$weight),
     ylim = range(howell_18_or_greater$height),
     xlab = "weight", ylab = "height")
abline(h = 0, lty = 2)
abline(h = 272, lty = 1, lwd = 0.5)
mtext("b ~ dnorm(0, 10)")
xbar <- mean(howell_18_or_greater$weight)

for (i in 1:N) {
    curve(a[i] + b[i] * (x - xbar),
    from = min(howell_18_or_greater$weight),
    to = max(howell_18_or_greater$weight), add = TRUE,
    col = col.alpha("black", 0.2))
}
```

```{r}
b <- rlnorm(1e4, 0, 1)
dens(b, xlim = c(0, 5), adj = 0.1)
```

```{r}
set.seed(2971)
N <- 100
a <- rnorm(N, 178, 20)
b <- rlnorm(N, 0, 1)
```


### 4.4.2 Finding the posterior distribution

```{r}
xbar <- mean(howell_18_or_greater$weight)

model_4.3 <- quap(
    alist(
        height ~ dnorm(mu, sigma),
        mu <- a + b * (weight - xbar),
        a ~ dnorm(178, 20), 
        b ~ dlnorm(0, 1),
        sigma ~ dunif(0, 50)
    ),
    data = howell_18_or_greater
)
```

```{r}
model_4.3b <- quap(
    alist(
        height ~ dnorm(mu, sigma),
        mu <- a + exp(log_b) + (weight - xbar),
        a ~ dnorm(178, 20),
        log_b ~ dnorm(0, 1),
        sigma ~ dunif(0, 50)
        ),
    data = howell_18_or_greater
)
```

```{r}
precis(model_4.3)
```

```{r}
round(vcov(model_4.3), 3)
```

```{r}
plot(height ~ weight, data = howell_18_or_greater,
     col = rangi2)
posterior <- extract.samples(model_4.3)
a_map <- mean(posterior$a)
b_map <- mean(posterior$b)
curve(a_map + b_map * (x - xbar), add = TRUE)
```

```{r}
posterior <- extract.samples(model_4.3)
posterior[1:5, ]
```

```{r}
N <- 10
dN <- howell_18_or_greater[1:N, ]
mN <- quap(
    alist(
        height ~ dnorm(mu, sigma),
        mu <- a + b * (weight - mean(weight)),
        a ~ dnorm(178, 20),
        b ~ dlnorm(0, 1),
        sigma ~ dunif(0, 50)
    ),
    data = dN
)
```

```{r}
posterior <- extract.samples(mN, n = 20)

plot(dN$weight, dN$height,
     xlim = range(howell_18_or_greater$weight),
     ylim = range(howell_18_or_greater$height),
     col = rangi2,
     xlab = "weight", ylab = "height")
mtext(concat("N = ", N))

for (i in 1:20) {
    curve(posterior$a[i] + posterior$b[i] * (x - mean(dN$weight)),
    col = col.alpha("black", 0.3), add = TRUE)
}
```

```{r}
posterior <- extract.samples(model_4.3)
mu_at_50 <- posterior$a + posterior$b * (50 - xbar)
```

```{r}
dens(mu_at_50, col = rangi2, lwd = 2, xlab = "mu|weight = 50")
```

```{r}
PI(mu_at_50, prob = 0.89)
```

```{r}
mu <- link(model_4.3)
str(mu)
```

```{r}
weight_seq <- seq(from = 25, to = 70, by = 1)
mu <- link(model_4.3, data = data.frame(weight = weight_seq))
```

```{r}
plot(height ~ weight, howell_18_or_greater, type = "n")

for (i in 1:100) {
    points(weight_seq, mu[i,], pch = 16, col = col.alpha(rangi2, 0.1))
}
```

```{r}
mu_mean <- apply(mu, 2, mean)
mu_PI <- apply(mu, 2, PI, prob = 0.89)
```

